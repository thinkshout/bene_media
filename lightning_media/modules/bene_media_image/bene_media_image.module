<?php

/**
 * @file
 * Support for image media assets in Bene.
 */

use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\bene_core\OverrideHelper as Override;
use Drupal\bene_media_image\Plugin\MediaEntity\Type\Image;

/**
 * Implements hook_media_entity_type_info_alter().
 */
function bene_media_image_media_entity_type_info_alter(array &$types) {
  $types['image']['input_match']['field_types'] = ['image'];
  Override::pluginClass($types['image'], Image::class);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function bene_media_image_form_entity_browser_image_browser_form_alter(array &$form, FormStateInterface $form_state) {
  $form['#attached']['library'][] = 'bene_media/browser.styling';
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function bene_media_image_entity_form_display_presave(EntityFormDisplayInterface $display) {
  // Don't do anything during config sync.
  if (\Drupal::isConfigSyncing()) {
    return;
  }

  // Since the image browser integrates with the media library, it doesn't make
  // sense to use the image browser when creating or editing an image media
  // entity.
  if ($display->getTargetEntityTypeId() == 'media' && $display->getTargetBundle() == 'image') {
    return;
  }

  $filter = function (FieldStorageDefinitionInterface $field) {
    return $field->getType() == 'image';
  };
  $new_components = \Drupal::service('bene.display_helper')
    ->getNewFields($display, $filter);

  foreach ($new_components as $key => $component) {
    $display->setComponent($key, [
      'type' => 'entity_browser_file',
      'weight' => $component['weight'],
      'settings' => [
        'entity_browser' => 'image_browser',
        'field_widget_edit' => TRUE,
        'field_widget_remove' => TRUE,
        'view_mode' => 'default',
        'preview_image_style' => 'thumbnail',
        'open' => TRUE,
      ],
      'region' => 'content',
    ]);
  }
}
